/**********************************************************
	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
#include<vector>
#include<bits/stdc++.h>
vector <int>v;
void createvector(BinaryTreeNode<int>*root ){
    if(root==NULL){
        return;
    }
    v.push_back(root->data);
    createvector(root->left);
    createvector(root->right);
}
void pairSum(BinaryTreeNode<int> *root, int sum) {
    // Write your code here
    
    createvector(root);
    sort(v.begin() , v.end());
    int i=0; int j= v.size()-1;
    while(i<j){
      if((v[i] + v[j]) ==sum ){
          cout<< v[i]<<" "<<v[j]<<endl;
          i++; j--;
      }
        else if(( v[i]+v[j]) > sum ){
            j--;
        }
        else{
            i++;
        }
        
    }